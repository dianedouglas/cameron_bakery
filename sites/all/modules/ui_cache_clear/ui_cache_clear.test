<?php

/**
 * @file
 * Tests for UI Cache Clear module.
 */

/**
 * Base class for UI Cache Clear tests.
 */
class UICacheClearWebTestBase extends DrupalWebTestCase {
  protected $admin_user = NULL;
  protected $manager_user = NULL;

  function setUp() {
    $modules = func_get_args();
    $modules = isset($modules[0]) ? $modules[0] : $modules;
    $modules[] = 'ui_cache_clear';
    parent::setUp($modules);

    // Create admin user.
    $admin_user_permissions = array(
      'use clear cache ui',
      'access contextual links',
      'access administration pages',
      'administer site configuration',
    );
    $this->admin_user = $this->drupalCreateUser($admin_user_permissions);

    // Create manager user.
    $manager_user_permissions = array(
      'use clear cache ui',
      'access contextual links',
    );
    $this->manager_user = $this->drupalCreateUser($manager_user_permissions);
  }

  /**
   * Click on link with label = $label inside element with id = $element_id.
   */
  protected function clickLinkInElement($element_id, $label, $index = 0) {
    $url_before = $this->getUrl();
    $urls = $this->xpath('//*[@id=:element_id]//a[normalize-space(text())=:label]', array(':label' => $label, ':element_id' => $element_id));

    if (isset($urls[$index])) {
      $url_target = $this->getAbsoluteUrl($urls[$index]['href']);
    }

    $this->assertTrue(isset($urls[$index]), t('Clicked link %label (@url_target) in element with id %id from @url_before', array('%label' => $label, '@url_target' => $url_target, '@url_before' => $url_before, '%id' => $element_id)), t('Browser'));

    if (isset($url_target)) {
      return $this->drupalGet($url_target);
    }
    return FALSE;
  }
}

/**
 * Tests of functionality and settings of UI Cache Clear module.
 */
class UICacheClearBlockTestCase extends UICacheClearWebTestBase {

  public static function getInfo() {
    return array(
      'name' => 'UI Cache Clear Block',
      'description' => 'Tests of functionality and settings of UI Cache Clear module for blocks.',
      'group' => 'UI Cache Clear',
    );
  }

  function setUp() {
    // Install the UI Cache Clear module.
    parent::setUp(array('block', 'block_test'));
    _block_rehash('bartik');

    // Enable block caching.
    variable_set('block_cache', TRUE);

  }

  function testBlockCacheClear() {
    $block_content = $this->randomName(20);
    variable_set('block_test_content', $block_content);

    // Setup test block.
    $this->enableTestBlock(array('cache' => DRUPAL_CACHE_PER_ROLE));

    $this->drupalGet('');
    $this->assertText($block_content, 'Test block successfuly enabled.');

    // Cache block for admin.
    $this->drupalLogin($this->admin_user);
    $this->drupalGet('');
    // Cache block for manager.
    $this->drupalLogin($this->manager_user);
    $this->drupalGet('');

    // Change block content.
    $block_content_old = $block_content;
    $block_content = $this->randomName(20);
    variable_set('block_test_content', $block_content);

    $this->drupalGet('');
    $this->assertText($block_content_old, 'Old test block data is displayed.');
    $this->assertNoText($block_content, 'New test block data is not displayed.');

    // Use UI Cache Clear as manager.
    $this->clickLinkInElement('block-block-test-test-cache', t('Clear cache'));

    $this->drupalGet('');
    $this->assertNoText($block_content_old, 'Old test block data is not displayed.');
    $this->assertText($block_content, 'New test block data is displayed.');

    // View as admin.
    $this->drupalLogin($this->admin_user);
    $this->drupalGet('');
    $this->assertNoText($block_content_old, 'Old test block data is not displayed.');
    $this->assertText($block_content, 'New test block data is displayed.');

    // View as anonymous.
    $this->drupalLogout();
    $this->drupalGet('');
    $this->assertNoText($block_content_old, 'Old test block data is not displayed.');
    $this->assertText($block_content, 'New test block data is displayed.');
  }

  /**
   * Helper to enable and set cache mode for block from block_test.module.
   */
  function enableTestBlock($settings) {
    $settings = $settings + array(
      'theme' => 'bartik',
      'region' => 'sidebar_first',
      'status' => 1,
    );

    db_update('block')
      ->fields($settings)
      ->condition('module', 'block_test')
      ->condition('delta', 'test_cache')
      ->condition('theme', $settings['theme'])
      ->execute();
  }

}
