{"version":3,"sources":["../../../src/php/array/array_walk_recursive.js"],"names":[],"mappings":";;;;AAAA,OAAO,OAAP,GAAiB,SAAS,oBAAT,CAA+B,KAA/B,EAAsC,QAAtC,EAAgD,QAAhD,EAA0D;;;;;;;;;;;AAUzE,MAAI,CAAC,KAAD,IAAU,QAAO,KAAP,yCAAO,KAAP,OAAiB,QAA/B,EAAyC;AACvC,WAAO,KAAP;AACD;;AAED,MAAI,OAAO,QAAP,KAAoB,UAAxB,EAAoC;AAClC,WAAO,KAAP;AACD;;AAED,OAAK,IAAI,GAAT,IAAgB,KAAhB,EAAuB;;AAErB,QAAI,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,MAAM,GAAN,CAA/B,MAA+C,gBAAnD,EAAqE;AACnE,UAAI,WAAW,CAAC,MAAM,GAAN,CAAD,EAAa,QAAb,CAAf;AACA,UAAI,UAAU,MAAV,GAAmB,CAAvB,EAA0B;AACxB,iBAAS,IAAT,CAAc,QAAd;AACD;AACD,UAAI,qBAAqB,KAArB,CAA2B,IAA3B,EAAiC,QAAjC,MAA+C,KAAnD,EAA0D;AACxD,eAAO,KAAP;AACD;AACD;AACD;AACD,QAAI;AACF,UAAI,UAAU,MAAV,GAAmB,CAAvB,EAA0B;AACxB,iBAAS,MAAM,GAAN,CAAT,EAAqB,GAArB,EAA0B,QAA1B;AACD,OAFD,MAEO;AACL,iBAAS,MAAM,GAAN,CAAT,EAAqB,GAArB;AACD;AACF,KAND,CAME,OAAO,CAAP,EAAU;AACV,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD,CA1CD","file":"array_walk_recursive.js","sourcesContent":["module.exports = function array_walk_recursive (array, funcname, userdata) { // eslint-disable-line camelcase\n  // original by: Hugues Peccatte\n  //      note 1: Only works with user-defined functions, not built-in functions like void()\n  //   example 1: array_walk_recursive([3, 4], function () {}, 'userdata')\n  //   returns 1: true\n  //   example 2: array_walk_recursive([3, [4]], function () {}, 'userdata')\n  //   returns 2: true\n  //   example 3: array_walk_recursive([3, []], function () {}, 'userdata')\n  //   returns 3: true\n\n  if (!array || typeof array !== 'object') {\n    return false\n  }\n\n  if (typeof funcname !== 'function') {\n    return false\n  }\n\n  for (var key in array) {\n    // apply \"funcname\" recursively only on arrays\n    if (Object.prototype.toString.call(array[key]) === '[object Array]') {\n      var funcArgs = [array[key], funcname]\n      if (arguments.length > 2) {\n        funcArgs.push(userdata)\n      }\n      if (array_walk_recursive.apply(null, funcArgs) === false) {\n        return false\n      }\n      continue\n    }\n    try {\n      if (arguments.length > 2) {\n        funcname(array[key], key, userdata)\n      } else {\n        funcname(array[key], key)\n      }\n    } catch (e) {\n      return false\n    }\n  }\n\n  return true\n}\n"]}