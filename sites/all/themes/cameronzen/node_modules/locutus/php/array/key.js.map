{"version":3,"sources":["../../../src/php/array/key.js"],"names":[],"mappings":";;AAAA,OAAO,OAAP,GAAiB,SAAS,GAAT,CAAc,GAAd,EAAmB;;;;;;;;;;AAUlC,MAAI,UAAW,OAAO,MAAP,KAAkB,WAAlB,GAAgC,MAAhC,GAAyC,MAAxD;AACA,UAAQ,QAAR,GAAmB,QAAQ,QAAR,IAAoB,EAAvC;AACA,MAAI,WAAW,QAAQ,QAAvB;AACA,WAAS,GAAT,GAAe,SAAS,GAAT,IAAgB,EAA/B;AACA,WAAS,GAAT,CAAa,QAAb,GAAwB,SAAS,GAAT,CAAa,QAAb,IAAyB,EAAjD;AACA,MAAI,WAAW,SAAS,GAAT,CAAa,QAA5B;;AAEA,MAAI,UAAU,SAAV,OAAU,CAAU,KAAV,EAAiB;AAC7B,SAAK,IAAI,IAAI,CAAR,EAAW,SAAS,KAAK,MAA9B,EAAsC,IAAI,MAA1C,EAAkD,GAAlD,EAAuD;AACrD,UAAI,KAAK,CAAL,MAAY,KAAhB,EAAuB;AACrB,eAAO,CAAP;AACD;AACF;AACD,WAAO,CAAC,CAAR;AACD,GAPD;;AASA,MAAI,CAAC,SAAS,OAAd,EAAuB;AACrB,aAAS,OAAT,GAAmB,OAAnB;AACD;;AAED,MAAI,SAAS,OAAT,CAAiB,GAAjB,MAA0B,CAAC,CAA/B,EAAkC;AAChC,aAAS,IAAT,CAAc,GAAd,EAAmB,CAAnB;AACD;AACD,MAAI,SAAS,SAAS,SAAS,OAAT,CAAiB,GAAjB,IAAwB,CAAjC,CAAb;AACA,MAAI,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,GAA/B,MAAwC,gBAA5C,EAA8D;AAC5D,QAAI,KAAK,CAAT;AACA,SAAK,IAAI,CAAT,IAAc,GAAd,EAAmB;AACjB,UAAI,OAAO,MAAX,EAAmB;AACjB,eAAO,CAAP;AACD;AACD;AACD;;AAED,WAAO,KAAP;AACD;AACD,MAAI,IAAI,MAAJ,KAAe,CAAnB,EAAsB;AACpB,WAAO,KAAP;AACD;;AAED,SAAO,MAAP;AACD,CAlDD","file":"key.js","sourcesContent":["module.exports = function key (arr) {\n  //  discuss at: http://locutus.io/php/key/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Riddler (http://www.frontierwebdev.com/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: var $array = {fruit1: 'apple', 'fruit2': 'orange'}\n  //   example 1: key($array)\n  //   returns 1: 'fruit1'\n\n  var $global = (typeof window !== 'undefined' ? window : global)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n\n  if (pointers.indexOf(arr) === -1) {\n    pointers.push(arr, 0)\n  }\n  var cursor = pointers[pointers.indexOf(arr) + 1]\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    var ct = 0\n    for (var k in arr) {\n      if (ct === cursor) {\n        return k\n      }\n      ct++\n    }\n    // Empty\n    return false\n  }\n  if (arr.length === 0) {\n    return false\n  }\n\n  return cursor\n}\n"]}