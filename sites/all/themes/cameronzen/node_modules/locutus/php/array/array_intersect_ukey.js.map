{"version":3,"sources":["../../../src/php/array/array_intersect_ukey.js"],"names":[],"mappings":";;AAAA,OAAO,OAAP,GAAiB,SAAS,oBAAT,CAA+B,IAA/B,EAAqC;;;;;;;;;AAQpD,MAAI,SAAS,EAAb;AACA,MAAI,SAAS,UAAU,MAAV,GAAmB,CAAhC;AACA,MAAI,SAAS,SAAS,CAAtB;AACA,MAAI,KAAK,UAAU,MAAV,CAAT;AACA,MAAI,MAAM,UAAU,MAAV,CAAV;AACA,MAAI,KAAK,EAAT;AACA,MAAI,IAAI,CAAR;AACA,MAAI,IAAI,EAAR;AACA,MAAI,MAAM,EAAV;;AAEA,MAAI,UAAW,OAAO,MAAP,KAAkB,WAAlB,GAAgC,MAAhC,GAAyC,MAAxD;;AAEA,OAAM,OAAO,EAAP,KAAc,QAAf,GACD,QAAQ,EAAR,CADC,GAEA,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,EAA/B,MAAuC,gBAAxC,GACE,QAAQ,GAAG,CAAH,CAAR,EAAe,GAAG,CAAH,CAAf,CADF,GAEE,EAJN;;AAMA,QAAO,OAAO,GAAP,KAAe,QAAhB,GACF,QAAQ,GAAR,CADE,GAED,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,GAA/B,MAAwC,gBAAzC,GACE,QAAQ,IAAI,CAAJ,CAAR,EAAgB,IAAI,CAAJ,CAAhB,CADF,GAEE,GAJN;;AAMA,YAAU,KAAK,EAAL,IAAW,IAAX,EAAiB;;AACzB,UAAM,KAAK,IAAI,CAAT,EAAY,IAAI,MAAhB,EAAwB,GAAxB,EAA6B;;AACjC,YAAM,UAAU,CAAV,CAAN;AACA,WAAK,CAAL,IAAU,GAAV,EAAe;AACb,YAAI,GAAG,CAAH,EAAM,EAAN,MAAc,CAAlB,EAAqB;AACnB,cAAI,MAAM,MAAV,EAAkB;AAChB,mBAAO,EAAP,IAAa,KAAK,EAAL,CAAb;AACD;;;AAGD,mBAAS,IAAT,C;AACD;AACF;;AAED,eAAS,QAAT,C;AACD;AACF;;AAED,SAAO,MAAP;AACD,CAnDD","file":"array_intersect_ukey.js","sourcesContent":["module.exports = function array_intersect_ukey (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutus.io/php/array_intersect_ukey/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {blue: 1, red: 2, green: 3, purple: 4}\n  //   example 1: var $array2 = {green: 5, blue: 6, yellow: 7, cyan: 8}\n  //   example 1: array_intersect_ukey ($array1, $array2, function (key1, key2){ return (key1 === key2 ? 0 : (key1 > key2 ? 1 : -1)); })\n  //   returns 1: {blue: 1, green: 3}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var arglm2 = arglm1 - 1\n  var cb = arguments[arglm1]\n  var cb0 = arguments[arglm2]\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : global)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  cb0 = (typeof cb0 === 'string')\n    ? $global[cb0]\n    : (Object.prototype.toString.call(cb0) === '[object Array]')\n      ? $global[cb0[0]][cb0[1]]\n      : cb0\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    arrs: for (i = 1; i < arglm1; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb(k, k1) === 0) {\n          if (i === arglm2) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs // eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys // eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n"]}