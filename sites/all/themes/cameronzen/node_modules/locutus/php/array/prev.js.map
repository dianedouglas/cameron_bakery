{"version":3,"sources":["../../../src/php/array/prev.js"],"names":[],"mappings":";;AAAA,OAAO,OAAP,GAAiB,SAAS,IAAT,CAAe,GAAf,EAAoB;;;;;;;;AAQnC,MAAI,UAAW,OAAO,MAAP,KAAkB,WAAlB,GAAgC,MAAhC,GAAyC,MAAxD;AACA,UAAQ,QAAR,GAAmB,QAAQ,QAAR,IAAoB,EAAvC;AACA,MAAI,WAAW,QAAQ,QAAvB;AACA,WAAS,GAAT,GAAe,SAAS,GAAT,IAAgB,EAA/B;AACA,WAAS,GAAT,CAAa,QAAb,GAAwB,SAAS,GAAT,CAAa,QAAb,IAAyB,EAAjD;AACA,MAAI,WAAW,SAAS,GAAT,CAAa,QAA5B;;AAEA,MAAI,UAAU,SAAV,OAAU,CAAU,KAAV,EAAiB;AAC7B,SAAK,IAAI,IAAI,CAAR,EAAW,SAAS,KAAK,MAA9B,EAAsC,IAAI,MAA1C,EAAkD,GAAlD,EAAuD;AACrD,UAAI,KAAK,CAAL,MAAY,KAAhB,EAAuB;AACrB,eAAO,CAAP;AACD;AACF;AACD,WAAO,CAAC,CAAR;AACD,GAPD;;AASA,MAAI,CAAC,SAAS,OAAd,EAAuB;AACrB,aAAS,OAAT,GAAmB,OAAnB;AACD;AACD,MAAI,SAAS,SAAS,OAAT,CAAiB,GAAjB,CAAb;AACA,MAAI,SAAS,SAAS,SAAS,CAAlB,CAAb;AACA,MAAI,SAAS,OAAT,CAAiB,GAAjB,MAA0B,CAAC,CAA3B,IAAgC,WAAW,CAA/C,EAAkD;AAChD,WAAO,KAAP;AACD;AACD,MAAI,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,GAA/B,MAAwC,gBAA5C,EAA8D;AAC5D,QAAI,KAAK,CAAT;AACA,SAAK,IAAI,CAAT,IAAc,GAAd,EAAmB;AACjB,UAAI,OAAO,SAAS,CAApB,EAAuB;AACrB,iBAAS,SAAS,CAAlB,KAAwB,CAAxB;AACA,eAAO,IAAI,CAAJ,CAAP;AACD;AACD;AACD;;AAEF;AACD,MAAI,IAAI,MAAJ,KAAe,CAAnB,EAAsB;AACpB,WAAO,KAAP;AACD;AACD,WAAS,SAAS,CAAlB,KAAwB,CAAxB;AACA,SAAO,IAAI,SAAS,SAAS,CAAlB,CAAJ,CAAP;AACD,CAhDD","file":"prev.js","sourcesContent":["module.exports = function prev (arr) {\n  //  discuss at: http://locutus.io/php/prev/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: var $transport = ['foot', 'bike', 'car', 'plane']\n  //   example 1: prev($transport)\n  //   returns 1: false\n\n  var $global = (typeof window !== 'undefined' ? window : global)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n  var arrpos = pointers.indexOf(arr)\n  var cursor = pointers[arrpos + 1]\n  if (pointers.indexOf(arr) === -1 || cursor === 0) {\n    return false\n  }\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    var ct = 0\n    for (var k in arr) {\n      if (ct === cursor - 1) {\n        pointers[arrpos + 1] -= 1\n        return arr[k]\n      }\n      ct++\n    }\n    // Shouldn't reach here\n  }\n  if (arr.length === 0) {\n    return false\n  }\n  pointers[arrpos + 1] -= 1\n  return arr[pointers[arrpos + 1]]\n}\n"]}