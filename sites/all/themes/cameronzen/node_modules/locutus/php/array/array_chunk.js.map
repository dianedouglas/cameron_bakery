{"version":3,"sources":["../../../src/php/array/array_chunk.js"],"names":[],"mappings":";;AAAA,OAAO,OAAP,GAAiB,SAAS,WAAT,CAAsB,KAAtB,EAA6B,IAA7B,EAAmC,YAAnC,EAAiD;;;;;;;;;;;;;;;;AAehE,MAAI,CAAJ;AACA,MAAI,IAAI,EAAR;AACA,MAAI,IAAI,CAAR;AACA,MAAI,IAAI,CAAC,CAAT;AACA,MAAI,IAAI,MAAM,MAAN,IAAgB,CAAxB;AACA,MAAI,IAAI,EAAR;;AAEA,MAAI,OAAO,CAAX,EAAc;AACZ,WAAO,IAAP;AACD;;AAED,MAAI,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,KAA/B,MAA0C,gBAA9C,EAAgE;AAC9D,QAAI,YAAJ,EAAkB;AAChB,aAAO,IAAI,CAAX,EAAc;AACZ,SAAC,IAAI,IAAI,IAAT,IACI,EAAE,CAAF,EAAK,CAAL,IAAU,MAAM,CAAN,CADd,GAEI,EAAE,EAAE,CAAJ,IAAS,EAFb,CAEiB,EAAE,CAAF,EAAK,CAAL,IAAU,MAAM,CAAN,CAAV;AACjB;AACD;AACF,KAPD,MAOO;AACL,aAAO,IAAI,CAAX,EAAc;AACZ,SAAC,IAAI,IAAI,IAAT,IACI,EAAE,CAAF,EAAK,CAAL,IAAU,MAAM,CAAN,CADd,GAEI,EAAE,EAAE,CAAJ,IAAS,CAAC,MAAM,CAAN,CAAD,CAFb;AAGA;AACD;AACF;AACF,GAhBD,MAgBO;AACL,QAAI,YAAJ,EAAkB;AAChB,WAAK,CAAL,IAAU,KAAV,EAAiB;AACf,YAAI,MAAM,cAAN,CAAqB,CAArB,CAAJ,EAA6B;AAC3B,WAAC,IAAI,IAAI,IAAT,IACI,EAAE,CAAF,EAAK,CAAL,IAAU,MAAM,CAAN,CADd,GAEI,EAAE,EAAE,CAAJ,IAAS,EAFb,CAEiB,EAAE,CAAF,EAAK,CAAL,IAAU,MAAM,CAAN,CAAV;AACjB;AACD;AACF;AACF,KATD,MASO;AACL,WAAK,CAAL,IAAU,KAAV,EAAiB;AACf,YAAI,MAAM,cAAN,CAAqB,CAArB,CAAJ,EAA6B;AAC3B,WAAC,IAAI,IAAI,IAAT,IACI,EAAE,CAAF,EAAK,CAAL,IAAU,MAAM,CAAN,CADd,GAEI,EAAE,EAAE,CAAJ,IAAS,CAAC,MAAM,CAAN,CAAD,CAFb;AAGA;AACD;AACF;AACF;AACF;;AAED,SAAO,CAAP;AACD,CAjED","file":"array_chunk.js","sourcesContent":["module.exports = function array_chunk (input, size, preserveKeys) { // eslint-disable-line camelcase\n  //  discuss at: http://locutus.io/php/array_chunk/\n  // original by: Carlos R. L. Rodrigues (http://www.jsfromhell.com)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Important note: Per the ECMAScript specification,\n  //      note 1: objects may not always iterate in a predictable order\n  //   example 1: array_chunk(['Kevin', 'van', 'Zonneveld'], 2)\n  //   returns 1: [['Kevin', 'van'], ['Zonneveld']]\n  //   example 2: array_chunk(['Kevin', 'van', 'Zonneveld'], 2, true)\n  //   returns 2: [{0:'Kevin', 1:'van'}, {2: 'Zonneveld'}]\n  //   example 3: array_chunk({1:'Kevin', 2:'van', 3:'Zonneveld'}, 2)\n  //   returns 3: [['Kevin', 'van'], ['Zonneveld']]\n  //   example 4: array_chunk({1:'Kevin', 2:'van', 3:'Zonneveld'}, 2, true)\n  //   returns 4: [{1: 'Kevin', 2: 'van'}, {3: 'Zonneveld'}]\n\n  var x\n  var p = ''\n  var i = 0\n  var c = -1\n  var l = input.length || 0\n  var n = []\n\n  if (size < 1) {\n    return null\n  }\n\n  if (Object.prototype.toString.call(input) === '[object Array]') {\n    if (preserveKeys) {\n      while (i < l) {\n        (x = i % size)\n          ? n[c][i] = input[i]\n          : n[++c] = {}; n[c][i] = input[i]\n        i++\n      }\n    } else {\n      while (i < l) {\n        (x = i % size)\n          ? n[c][x] = input[i]\n          : n[++c] = [input[i]]\n        i++\n      }\n    }\n  } else {\n    if (preserveKeys) {\n      for (p in input) {\n        if (input.hasOwnProperty(p)) {\n          (x = i % size)\n            ? n[c][p] = input[p]\n            : n[++c] = {}; n[c][p] = input[p]\n          i++\n        }\n      }\n    } else {\n      for (p in input) {\n        if (input.hasOwnProperty(p)) {\n          (x = i % size)\n            ? n[c][x] = input[p]\n            : n[++c] = [input[p]]\n          i++\n        }\n      }\n    }\n  }\n\n  return n\n}\n"]}