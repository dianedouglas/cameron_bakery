{"version":3,"sources":["../../../src/php/array/array_push.js"],"names":[],"mappings":";;AAAA,OAAO,OAAP,GAAiB,SAAS,UAAT,CAAqB,QAArB,EAA+B;;;;;;;;;;;;;AAY9C,MAAI,IAAI,CAAR;AACA,MAAI,KAAK,EAAT;AACA,MAAI,OAAO,SAAX;AACA,MAAI,OAAO,KAAK,MAAhB;AACA,MAAI,YAAY,MAAhB;AACA,MAAI,OAAO,CAAX;AACA,MAAI,aAAa,CAAjB;AACA,MAAI,MAAM,CAAV;;AAEA,MAAI,SAAS,cAAT,CAAwB,QAAxB,CAAJ,EAAuC;AACrC,SAAK,IAAI,CAAT,EAAY,IAAI,IAAhB,EAAsB,GAAtB,EAA2B;AACzB,eAAS,SAAS,MAAlB,IAA4B,KAAK,CAAL,CAA5B;AACD;AACD,WAAO,SAAS,MAAhB;AACD;;;AAGD,OAAK,EAAL,IAAW,QAAX,EAAqB;AACnB,QAAI,SAAS,cAAT,CAAwB,EAAxB,CAAJ,EAAiC;AAC/B,QAAE,GAAF;AACA,UAAI,GAAG,MAAH,CAAU,SAAV,MAAyB,CAAC,CAA9B,EAAiC;AAC/B,eAAO,SAAS,EAAT,EAAa,EAAb,CAAP;AACA,qBAAa,OAAO,UAAP,GAAoB,IAApB,GAA2B,UAAxC;AACD;AACF;AACF;AACD,OAAK,IAAI,CAAT,EAAY,IAAI,IAAhB,EAAsB,GAAtB,EAA2B;AACzB,aAAS,EAAE,UAAX,IAAyB,KAAK,CAAL,CAAzB;AACD;;AAED,SAAO,MAAM,CAAN,GAAU,CAAjB;AACD,CA3CD","file":"array_push.js","sourcesContent":["module.exports = function array_push (inputArr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutus.io/php/array_push/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Note also that IE retains information about property position even\n  //      note 1: after being supposedly deleted, so if you delete properties and then\n  //      note 1: add back properties with the same keys (including numeric) that had\n  //      note 1: been deleted, the order will be as before; thus, this function is not\n  //      note 1: really recommended with associative arrays (objects) in IE environments\n  //   example 1: array_push(['kevin','van'], 'zonneveld')\n  //   returns 1: 3\n\n  var i = 0\n  var pr = ''\n  var argv = arguments\n  var argc = argv.length\n  var allDigits = /^\\d$/\n  var size = 0\n  var highestIdx = 0\n  var len = 0\n\n  if (inputArr.hasOwnProperty('length')) {\n    for (i = 1; i < argc; i++) {\n      inputArr[inputArr.length] = argv[i]\n    }\n    return inputArr.length\n  }\n\n  // Associative (object)\n  for (pr in inputArr) {\n    if (inputArr.hasOwnProperty(pr)) {\n      ++len\n      if (pr.search(allDigits) !== -1) {\n        size = parseInt(pr, 10)\n        highestIdx = size > highestIdx ? size : highestIdx\n      }\n    }\n  }\n  for (i = 1; i < argc; i++) {\n    inputArr[++highestIdx] = argv[i]\n  }\n\n  return len + i - 1\n}\n"]}