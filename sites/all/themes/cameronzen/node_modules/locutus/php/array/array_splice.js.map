{"version":3,"sources":["../../../src/php/array/array_splice.js"],"names":[],"mappings":"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","file":"array_splice.js","sourcesContent":["module.exports = function array_splice (arr, offst, lgth, replacement) { // eslint-disable-line camelcase\n  //  discuss at: http://locutus.io/php/array_splice/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Theriault (https://github.com/Theriault)\n  //      note 1: Order does get shifted in associative array input with numeric indices,\n  //      note 1: since PHP behavior doesn't preserve keys, but I understand order is\n  //      note 1: not reliable anyways\n  //      note 1: Note also that IE retains information about property position even\n  //      note 1: after being supposedly deleted, so use of this function may produce\n  //      note 1: unexpected results in IE if you later attempt to add back properties\n  //      note 1: with the same keys that had been deleted\n  //   example 1: var $input = {4: \"red\", 'abc': \"green\", 2: \"blue\", 'dud': \"yellow\"}\n  //   example 1: array_splice($input, 2)\n  //   returns 1: {4: \"red\", 'abc': \"green\"}\n  //   example 2: var $input = [\"red\", \"green\", \"blue\", \"yellow\"]\n  //   example 2: array_splice($input, 3, 0, \"purple\")\n  //   returns 2: []\n  //   example 3: var $input = [\"red\", \"green\", \"blue\", \"yellow\"]\n  //   example 3: array_splice($input, -1, 1, [\"black\", \"maroon\"])\n  //   returns 3: [\"yellow\"]\n  //        test: skip-1\n\n  var isInt = require('../var/is_int')\n\n  var _checkToUpIndices = function (arr, ct, key) {\n    // Deal with situation, e.g., if encounter index 4 and try\n    // to set it to 0, but 0 exists later in loop (need to\n    // increment all subsequent (skipping current key,\n    // since we need its value below) until find unused)\n    if (arr[ct] !== undefined) {\n      var tmp = ct\n      ct += 1\n      if (ct === key) {\n        ct += 1\n      }\n      ct = _checkToUpIndices(arr, ct, key)\n      arr[ct] = arr[tmp]\n      delete arr[tmp]\n    }\n    return ct\n  }\n\n  if (replacement && typeof replacement !== 'object') {\n    replacement = [replacement]\n  }\n  if (lgth === undefined) {\n    lgth = offst >= 0 ? arr.length - offst : -offst\n  } else if (lgth < 0) {\n    lgth = (offst >= 0 ? arr.length - offst : -offst) + lgth\n  }\n\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    /* if (arr.length !== undefined) {\n     // Deal with array-like objects as input\n    delete arr.length;\n    }*/\n    var lgt = 0\n    var ct = -1\n    var rmvd = []\n    var rmvdObj = {}\n    var replCt = -1\n    var intCt = -1\n    var returnArr = true\n    var rmvdCt = 0\n    var rmvdLngth = 0\n    var key = ''\n    // rmvdObj.length = 0;\n    for (key in arr) {\n      // Can do arr.__count__ in some browsers\n      lgt += 1\n    }\n    offst = (offst >= 0) ? offst : lgt + offst\n    for (key in arr) {\n      ct += 1\n      if (ct < offst) {\n        if (isInt(key)) {\n          intCt += 1\n          if (parseInt(key, 10) === intCt) {\n            // Key is already numbered ok, so don't need to change key for value\n            continue\n          }\n          // Deal with situation, e.g.,\n          _checkToUpIndices(arr, intCt, key)\n          // if encounter index 4 and try to set it to 0, but 0 exists later in loop\n          arr[intCt] = arr[key]\n          delete arr[key]\n        }\n        continue\n      }\n      if (returnArr && isInt(key)) {\n        rmvd.push(arr[key])\n        // PHP starts over here too\n        rmvdObj[rmvdCt++] = arr[key]\n      } else {\n        rmvdObj[key] = arr[key]\n        returnArr = false\n      }\n      rmvdLngth += 1\n      // rmvdObj.length += 1;\n      if (replacement && replacement[++replCt]) {\n        arr[key] = replacement[replCt]\n      } else {\n        delete arr[key]\n      }\n    }\n    // Make (back) into an array-like object\n    // arr.length = lgt - rmvdLngth + (replacement ? replacement.length : 0);\n    return returnArr ? rmvd : rmvdObj\n  }\n\n  if (replacement) {\n    replacement.unshift(offst, lgth)\n    return Array.prototype.splice.apply(arr, replacement)\n  }\n\n  return arr.splice(offst, lgth)\n}\n"]}