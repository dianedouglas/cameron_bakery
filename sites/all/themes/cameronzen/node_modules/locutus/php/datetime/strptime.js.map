{"version":3,"sources":["../../../src/php/datetime/strptime.js"],"names":[],"mappings":"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","file":"strptime.js","sourcesContent":["module.exports = function strptime (dateStr, format) {\n  //  discuss at: http://locutus.io/php/strptime/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: strftime\n  //   example 1: strptime('20091112222135', '%Y%m%d%H%M%S') // Return value will depend on date and locale\n  //   returns 1: {tm_sec: 35, tm_min: 21, tm_hour: 22, tm_mday: 12, tm_mon: 10, tm_year: 109, tm_wday: 4, tm_yday: 315, unparsed: ''}\n  //   example 2: strptime('2009extra', '%Y')\n  //   returns 2: {tm_sec:0, tm_min:0, tm_hour:0, tm_mday:0, tm_mon:0, tm_year:109, tm_wday:3, tm_yday: -1, unparsed: 'extra'}\n\n  var setlocale = require('../strings/setlocale')\n  var arrayMap = require('../array/array_map')\n\n  var retObj = {\n    tm_sec: 0,\n    tm_min: 0,\n    tm_hour: 0,\n    tm_mday: 0,\n    tm_mon: 0,\n    tm_year: 0,\n    tm_wday: 0,\n    tm_yday: 0,\n    unparsed: ''\n  }\n  var i = 0\n  var j = 0\n  var amPmOffset = 0\n  var prevHour = false\n  var _reset = function (dateObj, realMday) {\n    // realMday is to allow for a value of 0 in return results (but without\n    // messing up the Date() object)\n    var jan1\n    var o = retObj\n    var d = dateObj\n    o.tm_sec = d.getUTCSeconds()\n    o.tm_min = d.getUTCMinutes()\n    o.tm_hour = d.getUTCHours()\n    o.tm_mday = realMday === 0 ? realMday : d.getUTCDate()\n    o.tm_mon = d.getUTCMonth()\n    o.tm_year = d.getUTCFullYear() - 1900\n    o.tm_wday = realMday === 0 ? (d.getUTCDay() > 0 ? d.getUTCDay() - 1 : 6) : d.getUTCDay()\n    jan1 = new Date(Date.UTC(d.getUTCFullYear(), 0, 1))\n    o.tm_yday = Math.ceil((d - jan1) / (1000 * 60 * 60 * 24))\n  }\n  var _date = function () {\n    var o = retObj\n    // We set date to at least 1 to ensure year or month doesn't go backwards\n    return _reset(new Date(Date.UTC(\n      o.tm_year + 1900,\n      o.tm_mon,\n      o.tm_mday || 1,\n      o.tm_hour,\n      o.tm_min,\n      o.tm_sec\n    )),\n    o.tm_mday)\n  }\n\n  var _NWS = /\\S/\n  var _WS = /\\s/\n\n  var _aggregates = {\n    c: 'locale',\n    D: '%m/%d/%y',\n    F: '%y-%m-%d',\n    r: 'locale',\n    R: '%H:%M',\n    T: '%H:%M:%S',\n    x: 'locale',\n    X: 'locale'\n  }\n\n  /* Fix: Locale alternatives are supported though not documented in PHP; see http://linux.die.net/man/3/strptime\n    Ec\n    EC\n    Ex\n    EX\n    Ey\n    EY\n    Od or Oe\n    OH\n    OI\n    Om\n    OM\n    OS\n    OU\n    Ow\n    OW\n    Oy\n  */\n  var _pregQuote = function (str) {\n    return (str + '').replace(/([\\\\\\.\\+\\*\\?\\[\\^\\]\\$\\(\\)\\{\\}=!<>\\|:])/g, '\\\\$1')\n  }\n\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : global)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var locale = $locutus.php.localeCategories.LC_TIME\n  var lcTime = $locutus.php.locales[locale].LC_TIME\n\n  // First replace aggregates (run in a loop because an agg may be made up of other aggs)\n  while (format.match(/%[cDFhnrRtTxX]/)) {\n    format = format.replace(/%([cDFhnrRtTxX])/g, function (m0, m1) {\n      var f = _aggregates[m1]\n      return (f === 'locale' ? lcTime[m1] : f)\n    })\n  }\n\n  var _addNext = function (j, regex, cb) {\n    if (typeof regex === 'string') {\n      regex = new RegExp('^' + regex, 'i')\n    }\n    var check = dateStr.slice(j)\n    var match = regex.exec(check)\n    // Even if the callback returns null after assigning to the\n    // return object, the object won't be saved anyways\n    var testNull = match ? cb.apply(null, match) : null\n    if (testNull === null) {\n      throw new Error('No match in string')\n    }\n    return j + match[0].length\n  }\n\n  var _addLocalized = function (j, formatChar, category) {\n    // Could make each parenthesized instead and pass index to callback:\n    return _addNext(j, arrayMap(_pregQuote, lcTime[formatChar]).join('|'),\n      function (m) {\n        var match = lcTime[formatChar].search(new RegExp('^' + _pregQuote(m) + '$', 'i'))\n        if (match) {\n          retObj[category] = match[0]\n        }\n      })\n  }\n\n  // BEGIN PROCESSING CHARACTERS\n  for (i = 0, j = 0; i < format.length; i++) {\n    if (format.charAt(i) === '%') {\n      var literalPos = ['%', 'n', 't'].indexOf(format.charAt(i + 1))\n      if (literalPos !== -1) {\n        if (['%', '\\n', '\\t'].indexOf(dateStr.charAt(j)) === literalPos) {\n          // a matched literal\n          ++i;\n          // skip beyond\n          ++j\n          continue\n        }\n        // Format indicated a percent literal, but not actually present\n        return false\n      }\n      var formatChar = format.charAt(i + 1)\n      try {\n        switch (formatChar) {\n          case 'a':\n          case 'A':\n            // Sunday-Saturday\n            // Changes nothing else\n            j = _addLocalized(j, formatChar, 'tm_wday')\n            break\n          case 'h':\n          case 'b':\n            // Jan-Dec\n            j = _addLocalized(j, 'b', 'tm_mon')\n            // Also changes wday, yday\n            _date()\n            break\n          case 'B':\n            // January-December\n            j = _addLocalized(j, formatChar, 'tm_mon')\n            // Also changes wday, yday\n            _date()\n            break\n          case 'C':\n            // 0+; century (19 for 20th)\n            // PHP docs say two-digit, but accepts one-digit (two-digit max):\n            j = _addNext(j, /^\\d?\\d/,\n\n            function (d) {\n              var year = (parseInt(d, 10) - 19) * 100\n              retObj.tm_year = year\n              _date()\n              if (!retObj.tm_yday) {\n                retObj.tm_yday = -1\n              }\n              // Also changes wday; and sets yday to -1 (always?)\n            })\n            break\n          case 'd':\n          case 'e':\n            // 1-31 day\n            j = _addNext(j, formatChar === 'd'\n              ? /^(0[1-9]|[1-2]\\d|3[0-1])/\n              : /^([1-2]\\d|3[0-1]|[1-9])/,\n            function (d) {\n              var dayMonth = parseInt(d, 10)\n              retObj.tm_mday = dayMonth\n              // Also changes w_day, y_day\n              _date()\n            })\n            break\n          case 'g':\n            // No apparent effect; 2-digit year (see 'V')\n            break\n          case 'G':\n            // No apparent effect; 4-digit year (see 'V')'\n            break\n          case 'H':\n            // 00-23 hours\n            j = _addNext(j, /^([0-1]\\d|2[0-3])/, function (d) {\n              var hour = parseInt(d, 10)\n              retObj.tm_hour = hour\n              // Changes nothing else\n            })\n            break\n          case 'l':\n          case 'I':\n            // 01-12 hours\n            j = _addNext(j, formatChar === 'l'\n              ? /^([1-9]|1[0-2])/\n              : /^(0[1-9]|1[0-2])/,\n            function (d) {\n              var hour = parseInt(d, 10) - 1 + amPmOffset\n              retObj.tm_hour = hour\n              // Used for coordinating with am-pm\n              prevHour = true\n              // Changes nothing else, but affected by prior 'p/P'\n            })\n            break\n          case 'j':\n            // 001-366 day of year\n            j = _addNext(j, /^(00[1-9]|0[1-9]\\d|[1-2]\\d\\d|3[0-6][0-6])/, function (d) {\n              var dayYear = parseInt(d, 10) - 1\n              retObj.tm_yday = dayYear\n              // Changes nothing else\n              // (oddly, since if original by a given year, could calculate other fields)\n            })\n            break\n          case 'm':\n            // 01-12 month\n            j = _addNext(j, /^(0[1-9]|1[0-2])/, function (d) {\n              var month = parseInt(d, 10) - 1\n              retObj.tm_mon = month\n            // Also sets wday and yday\n              _date()\n            })\n            break\n          case 'M':\n            // 00-59 minutes\n            j = _addNext(j, /^[0-5]\\d/, function (d) {\n              var minute = parseInt(d, 10)\n              retObj.tm_min = minute\n            // Changes nothing else\n            })\n            break\n          case 'P':\n            // Seems not to work; AM-PM\n            // Could make fall-through instead since supposed to be a synonym despite PHP docs\n            return false\n          case 'p':\n            // am-pm\n            j = _addNext(j, /^(am|pm)/i, function (d) {\n              // No effect on 'H' since already 24 hours but\n              //   works before or after setting of l/I hour\n              amPmOffset = (/a/)\n              .test(d) ? 0 : 12\n              if (prevHour) {\n                retObj.tm_hour += amPmOffset\n              }\n            })\n            break\n          case 's':\n            // Unix timestamp (in seconds)\n            j = _addNext(j, /^\\d+/, function (d) {\n              var timestamp = parseInt(d, 10)\n              var date = new Date(Date.UTC(timestamp * 1000))\n              _reset(date)\n              // Affects all fields, but can't be negative (and initial + not allowed)\n            })\n            break\n          case 'S':\n            // 00-59 seconds\n            j = _addNext(j, /^[0-5]\\d/, // strptime also accepts 60-61 for some reason\n\n            function (d) {\n              var second = parseInt(d, 10)\n              retObj.tm_sec = second\n              // Changes nothing else\n            })\n            break\n          case 'u':\n          case 'w':\n            // 0 (Sunday)-6(Saturday)\n            j = _addNext(j, /^\\d/, function (d) {\n              retObj.tm_wday = d - (formatChar === 'u')\n              // Changes nothing else apparently\n            })\n            break\n          case 'U':\n          case 'V':\n          case 'W':\n            // Apparently ignored (week of year, from 1st Monday)\n            break\n          case 'y':\n            // 69 (or higher) for 1969+, 68 (or lower) for 2068-\n             // PHP docs say two-digit, but accepts one-digit (two-digit max):\n            j = _addNext(j, /^\\d?\\d/,\n\n            function (d) {\n              d = parseInt(d, 10)\n              var year = d >= 69 ? d : d + 100\n              retObj.tm_year = year\n              _date()\n              if (!retObj.tm_yday) {\n                retObj.tm_yday = -1\n              }\n              // Also changes wday; and sets yday to -1 (always?)\n            })\n            break\n          case 'Y':\n            // 2010 (4-digit year)\n            // PHP docs say four-digit, but accepts one-digit (four-digit max):\n            j = _addNext(j, /^\\d{1,4}/,\n\n            function (d) {\n              var year = (parseInt(d, 10)) - 1900\n              retObj.tm_year = year\n              _date()\n              if (!retObj.tm_yday) {\n                retObj.tm_yday = -1\n              }\n              // Also changes wday; and sets yday to -1 (always?)\n            })\n            break\n          case 'z':\n            // Timezone; on my system, strftime gives -0800,\n            // but strptime seems not to alter hour setting\n            break\n          case 'Z':\n            // Timezone; on my system, strftime gives PST, but strptime treats text as unparsed\n            break\n          default:\n            throw new Error('Unrecognized formatting character in strptime()')\n        }\n      } catch (e) {\n        if (e === 'No match in string') {\n          // Allow us to exit\n          // There was supposed to be a matching format but there wasn't\n          return false\n        }\n        // Calculate skipping beyond initial percent too\n      }\n      ++i\n    } else if (format.charAt(i) !== dateStr.charAt(j)) {\n      // If extra whitespace at beginning or end of either, or between formats, no problem\n      // (just a problem when between % and format specifier)\n\n      // If the string has white-space, it is ok to ignore\n      if (dateStr.charAt(j).search(_WS) !== -1) {\n        j++\n        // Let the next iteration try again with the same format character\n        i--\n      } else if (format.charAt(i).search(_NWS) !== -1) {\n        // Any extra formatting characters besides white-space causes\n        // problems (do check after WS though, as may just be WS in string before next character)\n        return false\n      }\n      // Extra WS in format\n      // Adjust strings when encounter non-matching whitespace, so they align in future checks above\n      // Will check on next iteration (against same (non-WS) string character)\n    } else {\n      j++\n    }\n  }\n\n  // POST-PROCESSING\n  // Will also get extra whitespace; empty string if none\n  retObj.unparsed = dateStr.slice(j)\n  return retObj\n}\n"]}