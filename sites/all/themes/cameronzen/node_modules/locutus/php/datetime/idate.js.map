{"version":3,"sources":["../../../src/php/datetime/idate.js"],"names":[],"mappings":"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","file":"idate.js","sourcesContent":["module.exports = function idate (format, timestamp) {\n  //  discuss at: http://locutus.io/php/idate/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: date\n  // original by: gettimeofday\n  //    input by: Alex\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //   example 1: idate('y', 1255633200)\n  //   returns 1: 9\n\n  if (format === undefined) {\n    throw new Error('idate() expects at least 1 parameter, 0 given')\n  }\n  if (!format.length || format.length > 1) {\n    throw new Error('idate format is one char')\n  }\n\n  // @todo: Need to allow date_default_timezone_set() (check for $locutus.default_timezone and use)\n  var _date = (typeof timestamp === 'undefined')\n    ? new Date()\n    : (timestamp instanceof Date)\n      ? new Date(timestamp)\n      : new Date(timestamp * 1000)\n  var a\n\n  switch (format) {\n    case 'B':\n      return Math.floor((\n        (_date.getUTCHours() * 36e2) +\n        (_date.getUTCMinutes() * 60) +\n        _date.getUTCSeconds() + 36e2\n      ) / 86.4) % 1e3\n    case 'd':\n      return _date.getDate()\n    case 'h':\n      return _date.getHours() % 12 || 12\n    case 'H':\n      return _date.getHours()\n    case 'i':\n      return _date.getMinutes()\n    case 'I':\n    // capital 'i'\n    // Logic original by getimeofday().\n    // Compares Jan 1 minus Jan 1 UTC to Jul 1 minus Jul 1 UTC.\n    // If they are not equal, then DST is observed.\n      a = _date.getFullYear()\n      return 0 + (((new Date(a, 0)) - Date.UTC(a, 0)) !== ((new Date(a, 6)) - Date.UTC(a, 6)))\n    case 'L':\n      a = _date.getFullYear()\n      return (!(a & 3) && (a % 1e2 || !(a % 4e2))) ? 1 : 0\n    case 'm':\n      return _date.getMonth() + 1\n    case 's':\n      return _date.getSeconds()\n    case 't':\n      return (new Date(_date.getFullYear(), _date.getMonth() + 1, 0))\n      .getDate()\n    case 'U':\n      return Math.round(_date.getTime() / 1000)\n    case 'w':\n      return _date.getDay()\n    case 'W':\n      a = new Date(\n        _date.getFullYear(),\n        _date.getMonth(),\n        _date.getDate() - (_date.getDay() || 7) + 3\n      )\n      return 1 + Math.round((a - (new Date(a.getFullYear(), 0, 4))) / 864e5 / 7)\n    case 'y':\n      return parseInt((_date.getFullYear() + '')\n      .slice(2), 10) // This function returns an integer, unlike _date()\n    case 'Y':\n      return _date.getFullYear()\n    case 'z':\n      return Math.floor((_date - new Date(_date.getFullYear(), 0, 1)) / 864e5)\n    case 'Z':\n      return -_date.getTimezoneOffset() * 60\n    default:\n      throw new Error('Unrecognized _date format token')\n  }\n}\n"]}