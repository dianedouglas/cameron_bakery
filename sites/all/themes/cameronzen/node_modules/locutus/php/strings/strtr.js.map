{"version":3,"sources":["../../../src/php/strings/strtr.js"],"names":[],"mappings":";;;;AAAA,OAAO,OAAP,GAAiB,SAAS,KAAT,CAAgB,GAAhB,EAAqB,MAArB,EAA6B,IAA7B,EAAmC;;;;;;;;;;;;;;;;;;;;;;;;;AAyBlD,MAAI,SAAS,QAAQ,iBAAR,CAAb;AACA,MAAI,SAAS,QAAQ,iBAAR,CAAb;;AAEA,MAAI,KAAK,EAAT;AACA,MAAI,IAAI,CAAR;AACA,MAAI,IAAI,CAAR;AACA,MAAI,SAAS,CAAb;AACA,MAAI,UAAU,CAAd;AACA,MAAI,kBAAkB,KAAtB;AACA,MAAI,cAAc,EAAlB;AACA,MAAI,YAAY,EAAhB;AACA,MAAI,OAAO,EAAX;AACA,MAAI,UAAU,EAAd;AACA,MAAI,QAAQ,EAAZ;AACA,MAAI,MAAM,EAAV;AACA,MAAI,QAAQ,KAAZ;;;;AAIA,MAAI,QAAO,MAAP,yCAAO,MAAP,OAAkB,QAAtB,EAAgC;;;AAG9B,sBAAkB,OAAO,yBAAP,EAAkC,KAAlC,CAAlB;AACA,aAAS,OAAO,MAAP,CAAT;AACA,WAAO,yBAAP,EAAkC,eAAlC;;AAEA,SAAK,EAAL,IAAW,MAAX,EAAmB;AACjB,UAAI,OAAO,cAAP,CAAsB,EAAtB,CAAJ,EAA+B;AAC7B,gBAAQ,IAAR,CAAa,EAAb;AACA,cAAM,IAAN,CAAW,OAAO,EAAP,CAAX;AACD;AACF;;AAED,aAAS,OAAT;AACA,WAAO,KAAP;AACD;;;AAGD,WAAS,IAAI,MAAb;AACA,YAAU,OAAO,MAAjB;AACA,gBAAc,OAAO,MAAP,KAAkB,QAAhC;AACA,cAAY,OAAO,IAAP,KAAgB,QAA5B;;AAEA,OAAK,IAAI,CAAT,EAAY,IAAI,MAAhB,EAAwB,GAAxB,EAA6B;AAC3B,YAAQ,KAAR;AACA,QAAI,WAAJ,EAAiB;AACf,aAAO,IAAI,MAAJ,CAAW,CAAX,CAAP;AACA,WAAK,IAAI,CAAT,EAAY,IAAI,OAAhB,EAAyB,GAAzB,EAA8B;AAC5B,YAAI,SAAS,OAAO,MAAP,CAAc,CAAd,CAAb,EAA+B;AAC7B,kBAAQ,IAAR;AACA;AACD;AACF;AACF,KARD,MAQO;AACL,WAAK,IAAI,CAAT,EAAY,IAAI,OAAhB,EAAyB,GAAzB,EAA8B;AAC5B,YAAI,IAAI,MAAJ,CAAW,CAAX,EAAc,OAAO,CAAP,EAAU,MAAxB,MAAoC,OAAO,CAAP,CAAxC,EAAmD;AACjD,kBAAQ,IAAR;;AAEA,cAAK,IAAI,OAAO,CAAP,EAAU,MAAf,GAAyB,CAA7B;AACA;AACD;AACF;AACF;AACD,QAAI,KAAJ,EAAW;AACT,aAAO,YAAY,KAAK,MAAL,CAAY,CAAZ,CAAZ,GAA6B,KAAK,CAAL,CAApC;AACD,KAFD,MAEO;AACL,aAAO,IAAI,MAAJ,CAAW,CAAX,CAAP;AACD;AACF;;AAED,SAAO,GAAP;AACD,CAhGD","file":"strtr.js","sourcesContent":["module.exports = function strtr (str, trFrom, trTo) {\n  //  discuss at: http://locutus.io/php/strtr/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: uestla\n  //    input by: Alan C\n  //    input by: Taras Bogach\n  //    input by: jpfle\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $trans = {'hello' : 'hi', 'hi' : 'hello'}\n  //   example 1: strtr('hi all, I said hello', $trans)\n  //   returns 1: 'hello all, I said hi'\n  //   example 2: strtr('äaabaåccasdeöoo', 'äåö','aao')\n  //   returns 2: 'aaabaaccasdeooo'\n  //   example 3: strtr('ääääääää', 'ä', 'a')\n  //   returns 3: 'aaaaaaaa'\n  //   example 4: strtr('http', 'pthxyz','xyzpth')\n  //   returns 4: 'zyyx'\n  //   example 5: strtr('zyyx', 'pthxyz','xyzpth')\n  //   returns 5: 'http'\n  //   example 6: strtr('aa', {'a':1,'aa':2})\n  //   returns 6: '2'\n\n  var krsort = require('../array/krsort')\n  var iniSet = require('../info/ini_set')\n\n  var fr = ''\n  var i = 0\n  var j = 0\n  var lenStr = 0\n  var lenFrom = 0\n  var sortByReference = false\n  var fromTypeStr = ''\n  var toTypeStr = ''\n  var istr = ''\n  var tmpFrom = []\n  var tmpTo = []\n  var ret = ''\n  var match = false\n\n  // Received replace_pairs?\n  // Convert to normal trFrom->trTo chars\n  if (typeof trFrom === 'object') {\n    // Not thread-safe; temporarily set to true\n    // @todo: Don't rely on ini here, use internal krsort instead\n    sortByReference = iniSet('locutus.sortByReference', false)\n    trFrom = krsort(trFrom)\n    iniSet('locutus.sortByReference', sortByReference)\n\n    for (fr in trFrom) {\n      if (trFrom.hasOwnProperty(fr)) {\n        tmpFrom.push(fr)\n        tmpTo.push(trFrom[fr])\n      }\n    }\n\n    trFrom = tmpFrom\n    trTo = tmpTo\n  }\n\n  // Walk through subject and replace chars when needed\n  lenStr = str.length\n  lenFrom = trFrom.length\n  fromTypeStr = typeof trFrom === 'string'\n  toTypeStr = typeof trTo === 'string'\n\n  for (i = 0; i < lenStr; i++) {\n    match = false\n    if (fromTypeStr) {\n      istr = str.charAt(i)\n      for (j = 0; j < lenFrom; j++) {\n        if (istr === trFrom.charAt(j)) {\n          match = true\n          break\n        }\n      }\n    } else {\n      for (j = 0; j < lenFrom; j++) {\n        if (str.substr(i, trFrom[j].length) === trFrom[j]) {\n          match = true\n          // Fast forward\n          i = (i + trFrom[j].length) - 1\n          break\n        }\n      }\n    }\n    if (match) {\n      ret += toTypeStr ? trTo.charAt(j) : trTo[j]\n    } else {\n      ret += str.charAt(i)\n    }\n  }\n\n  return ret\n}\n"]}