{"version":3,"sources":["../../../src/php/strings/strnatcasecmp.js"],"names":[],"mappings":";;AAAA,OAAO,OAAP,GAAiB,SAAS,aAAT,CAAwB,CAAxB,EAA2B,CAA3B,EAA8B;;;;;;;;;;;;;;;AAe7C,MAAI,YAAY,QAAQ,sBAAR,CAAhB;AACA,MAAI,iBAAiB,QAAQ,4BAAR,CAArB;;AAEA,MAAI,UAAU,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,WAAO,IAAP;AACD;;AAED,SAAO,UAAU,eAAe,CAAf,EAAkB,WAAlB,EAAV,EAA2C,eAAe,CAAf,EAAkB,WAAlB,EAA3C,CAAP;AACD,CAvBD","file":"strnatcasecmp.js","sourcesContent":["module.exports = function strnatcasecmp (a, b) {\n  //       discuss at: http://locutus.io/php/strnatcasecmp/\n  //      original by: Martin Pool\n  // reimplemented by: Pierre-Luc Paour\n  // reimplemented by: Kristof Coomans (SCK-CEN (Belgian Nucleair Research Centre))\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //         input by: Devan Penner-Woelk\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  // reimplemented by: Rafa≈Ç Kukawski\n  //        example 1: strnatcasecmp(10, 1)\n  //        returns 1: 1\n  //        example 2: strnatcasecmp('1', '10')\n  //        returns 2: -1\n\n  var strnatcmp = require('../strings/strnatcmp')\n  var _phpCastString = require('../_helpers/_phpCastString')\n\n  if (arguments.length !== 2) {\n    return null\n  }\n\n  return strnatcmp(_phpCastString(a).toLowerCase(), _phpCastString(b).toLowerCase())\n}\n"]}