{"version":3,"sources":["../../../src/php/strings/substr_count.js"],"names":[],"mappings":";;AAAA,OAAO,OAAP,GAAiB,SAAS,YAAT,CAAuB,QAAvB,EAAiC,MAAjC,EAAyC,MAAzC,EAAiD,MAAjD,EAAyD;;;;;;;;;;;;;;AAaxE,MAAI,MAAM,CAAV;;AAEA,cAAY,EAAZ;AACA,YAAU,EAAV;AACA,MAAI,MAAM,MAAN,CAAJ,EAAmB;AACjB,aAAS,CAAT;AACD;AACD,MAAI,MAAM,MAAN,CAAJ,EAAmB;AACjB,aAAS,CAAT;AACD;AACD,MAAI,OAAO,MAAP,KAAkB,CAAtB,EAAyB;AACvB,WAAO,KAAP;AACD;AACD;;AAEA,SAAO,CAAC,SAAS,SAAS,OAAT,CAAiB,MAAjB,EAAyB,SAAS,CAAlC,CAAV,MAAoD,CAAC,CAA5D,EAA+D;AAC7D,QAAI,SAAS,CAAT,IAAe,SAAS,OAAO,MAAjB,GAA2B,MAA7C,EAAqD;AACnD,aAAO,KAAP;AACD;AACD;AACD;;AAED,SAAO,GAAP;AACD,CApCD","file":"substr_count.js","sourcesContent":["module.exports = function substr_count (haystack, needle, offset, length) { // eslint-disable-line camelcase\n  //  discuss at: http://locutus.io/php/substr_count/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Thomas\n  //   example 1: substr_count('Kevin van Zonneveld', 'e')\n  //   returns 1: 3\n  //   example 2: substr_count('Kevin van Zonneveld', 'K', 1)\n  //   returns 2: 0\n  //   example 3: substr_count('Kevin van Zonneveld', 'Z', 0, 10)\n  //   returns 3: false\n\n  var cnt = 0\n\n  haystack += ''\n  needle += ''\n  if (isNaN(offset)) {\n    offset = 0\n  }\n  if (isNaN(length)) {\n    length = 0\n  }\n  if (needle.length === 0) {\n    return false\n  }\n  offset--\n\n  while ((offset = haystack.indexOf(needle, offset + 1)) !== -1) {\n    if (length > 0 && (offset + needle.length) > length) {\n      return false\n    }\n    cnt++\n  }\n\n  return cnt\n}\n"]}