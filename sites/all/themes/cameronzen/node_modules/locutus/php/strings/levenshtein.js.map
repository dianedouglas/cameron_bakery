{"version":3,"sources":["../../../src/php/strings/levenshtein.js"],"names":[],"mappings":";;AAAA,OAAO,OAAP,GAAiB,SAAS,WAAT,CAAsB,EAAtB,EAA0B,EAA1B,EAA8B,OAA9B,EAAuC,OAAvC,EAAgD,OAAhD,EAAyD;;;;;;;;;;;;;;;;;AAiBxE,YAAU,WAAW,IAAX,GAAkB,CAAlB,GAAsB,CAAC,OAAjC;AACA,YAAU,WAAW,IAAX,GAAkB,CAAlB,GAAsB,CAAC,OAAjC;AACA,YAAU,WAAW,IAAX,GAAkB,CAAlB,GAAsB,CAAC,OAAjC;;AAEA,MAAI,OAAO,EAAX,EAAe;AACb,WAAO,CAAP;AACD;;AAED,MAAI,KAAK,GAAG,MAAZ;AACA,MAAI,KAAK,GAAG,MAAZ;;AAEA,MAAI,OAAO,CAAX,EAAc;AACZ,WAAO,KAAK,OAAZ;AACD;AACD,MAAI,OAAO,CAAX,EAAc;AACZ,WAAO,KAAK,OAAZ;AACD;;;;;;;AAOD,MAAI,QAAQ,KAAZ;AACA,MAAI;AACF,YAAQ,CAAE,GAAD,CAAM,CAAN,CAAT;AACD,GAFD,CAEE,OAAO,CAAP,EAAU;;AAEV,YAAQ,IAAR;AACD;;AAED,MAAI,KAAJ,EAAW;AACT,SAAK,GAAG,KAAH,CAAS,EAAT,CAAL;AACA,SAAK,GAAG,KAAH,CAAS,EAAT,CAAL;AACD;;AAED,MAAI,KAAK,IAAI,KAAJ,CAAU,KAAK,CAAf,CAAT;AACA,MAAI,KAAK,IAAI,KAAJ,CAAU,KAAK,CAAf,CAAT;;AAEA,MAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,GAAxB;;AAEA,OAAK,KAAK,CAAV,EAAa,MAAM,EAAnB,EAAuB,IAAvB,EAA6B;AAC3B,OAAG,EAAH,IAAS,KAAK,OAAd;AACD;;AAED,OAAK,KAAK,CAAV,EAAa,KAAK,EAAlB,EAAsB,IAAtB,EAA4B;AAC1B,OAAG,CAAH,IAAQ,GAAG,CAAH,IAAQ,OAAhB;;AAEA,SAAK,KAAK,CAAV,EAAa,KAAK,EAAlB,EAAsB,IAAtB,EAA4B;AAC1B,WAAK,GAAG,EAAH,KAAW,GAAG,EAAH,MAAW,GAAG,EAAH,CAAZ,GAAsB,CAAtB,GAA0B,OAApC,CAAL;AACA,WAAK,GAAG,KAAK,CAAR,IAAa,OAAlB;;AAEA,UAAI,KAAK,EAAT,EAAa;AACX,aAAK,EAAL;AACD;;AAED,WAAK,GAAG,EAAH,IAAS,OAAd;;AAEA,UAAI,KAAK,EAAT,EAAa;AACX,aAAK,EAAL;AACD;;AAED,SAAG,KAAK,CAAR,IAAa,EAAb;AACD;;AAED,UAAM,EAAN;AACA,SAAK,EAAL;AACA,SAAK,GAAL;AACD;;AAED,OAAK,GAAG,EAAH,CAAL;;AAEA,SAAO,EAAP;AACD,CA1FD","file":"levenshtein.js","sourcesContent":["module.exports = function levenshtein (s1, s2, costIns, costRep, costDel) {\n  //       discuss at: http://locutus.io/php/levenshtein/\n  //      original by: Carlos R. L. Rodrigues (http://www.jsfromhell.com)\n  //      bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //       revised by: Andrea Giammarchi (http://webreflection.blogspot.com)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  // reimplemented by: Alexander M Beedie\n  // reimplemented by: RafaÅ‚ Kukawski (http://blog.kukawski.pl)\n  //        example 1: levenshtein('Kevin van Zonneveld', 'Kevin van Sommeveld')\n  //        returns 1: 3\n  //        example 2: levenshtein(\"carrrot\", \"carrots\")\n  //        returns 2: 2\n  //        example 3: levenshtein(\"carrrot\", \"carrots\", 2, 3, 4)\n  //        returns 3: 6\n\n  // var LEVENSHTEIN_MAX_LENGTH = 255 // PHP limits the function to max 255 character-long strings\n\n  costIns = costIns == null ? 1 : +costIns\n  costRep = costRep == null ? 1 : +costRep\n  costDel = costDel == null ? 1 : +costDel\n\n  if (s1 === s2) {\n    return 0\n  }\n\n  var l1 = s1.length\n  var l2 = s2.length\n\n  if (l1 === 0) {\n    return l2 * costIns\n  }\n  if (l2 === 0) {\n    return l1 * costDel\n  }\n\n  // Enable the 3 lines below to set the same limits on string length as PHP does\n  // if (l1 > LEVENSHTEIN_MAX_LENGTH || l2 > LEVENSHTEIN_MAX_LENGTH) {\n  //   return -1;\n  // }\n\n  var split = false\n  try {\n    split = !('0')[0]\n  } catch (e) {\n    // Earlier IE may not support access by string index\n    split = true\n  }\n\n  if (split) {\n    s1 = s1.split('')\n    s2 = s2.split('')\n  }\n\n  var p1 = new Array(l2 + 1)\n  var p2 = new Array(l2 + 1)\n\n  var i1, i2, c0, c1, c2, tmp\n\n  for (i2 = 0; i2 <= l2; i2++) {\n    p1[i2] = i2 * costIns\n  }\n\n  for (i1 = 0; i1 < l1; i1++) {\n    p2[0] = p1[0] + costDel\n\n    for (i2 = 0; i2 < l2; i2++) {\n      c0 = p1[i2] + ((s1[i1] === s2[i2]) ? 0 : costRep)\n      c1 = p1[i2 + 1] + costDel\n\n      if (c1 < c0) {\n        c0 = c1\n      }\n\n      c2 = p2[i2] + costIns\n\n      if (c2 < c0) {\n        c0 = c2\n      }\n\n      p2[i2 + 1] = c0\n    }\n\n    tmp = p1\n    p1 = p2\n    p2 = tmp\n  }\n\n  c0 = p1[l2]\n\n  return c0\n}\n"]}