{"version":3,"sources":["../../../src/php/strings/substr.js"],"names":[],"mappings":"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","file":"substr.js","sourcesContent":["module.exports = function substr (str, start, len) {\n  //  discuss at: http://locutus.io/php/substr/\n  // original by: Martijn Wieringa\n  // bugfixed by: T.Wild\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Theriault (https://github.com/Theriault)\n  //      note 1: Handles rare Unicode characters if 'unicode.semantics' ini (PHP6) is set to 'on'\n  //   example 1: substr('abcdef', 0, -1)\n  //   returns 1: 'abcde'\n  //   example 2: substr(2, 0, -6)\n  //   returns 2: false\n  //   example 3: ini_set('unicode.semantics', 'on')\n  //   example 3: substr('a\\uD801\\uDC00', 0, -1)\n  //   returns 3: 'a'\n  //   example 4: ini_set('unicode.semantics', 'on')\n  //   example 4: substr('a\\uD801\\uDC00', 0, 2)\n  //   returns 4: 'a\\uD801\\uDC00'\n  //   example 5: ini_set('unicode.semantics', 'on')\n  //   example 5: substr('a\\uD801\\uDC00', -1, 1)\n  //   returns 5: '\\uD801\\uDC00'\n  //   example 6: ini_set('unicode.semantics', 'on')\n  //   example 6: substr('a\\uD801\\uDC00z\\uD801\\uDC00', -3, 2)\n  //   returns 6: '\\uD801\\uDC00z'\n  //   example 7: ini_set('unicode.semantics', 'on')\n  //   example 7: substr('a\\uD801\\uDC00z\\uD801\\uDC00', -3, -1)\n  //   returns 7: '\\uD801\\uDC00z'\n  //        test: skip-3 skip-4 skip-5 skip-6 skip-7\n\n  str += ''\n  var end = str.length\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('unicode.emantics') : undefined) || 'off'\n\n  if (iniVal === 'off') {\n    // assumes there are no non-BMP characters;\n    // if there may be such characters, then it is best to turn it on (critical in true XHTML/XML)\n    if (start < 0) {\n      start += end\n    }\n    if (typeof len !== 'undefined') {\n      if (len < 0) {\n        end = len + end\n      } else {\n        end = len + start\n      }\n    }\n\n    // PHP returns false if start does not fall within the string.\n    // PHP returns false if the calculated end comes before the calculated start.\n    // PHP returns an empty string if start and end are the same.\n    // Otherwise, PHP returns the portion of the string from start to end.\n    if (start >= str.length || start < 0 || start > end) {\n      return false\n    }\n\n    return str.slice(start, end)\n  }\n\n  // Full-blown Unicode including non-Basic-Multilingual-Plane characters\n  var i = 0\n  var allBMP = true\n  var es = 0\n  var el = 0\n  var se = 0\n  var ret = ''\n\n  for (i = 0; i < str.length; i++) {\n    if (/[\\uD800-\\uDBFF]/.test(str.charAt(i)) && /[\\uDC00-\\uDFFF]/.test(str.charAt(i + 1))) {\n      allBMP = false\n      break\n    }\n  }\n\n  if (!allBMP) {\n    if (start < 0) {\n      for (i = end - 1, es = (start += end); i >= es; i--) {\n        if (/[\\uDC00-\\uDFFF]/.test(str.charAt(i)) && /[\\uD800-\\uDBFF]/.test(str.charAt(i - 1))) {\n          start--\n          es--\n        }\n      }\n    } else {\n      var surrogatePairs = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g\n      while ((surrogatePairs.exec(str)) !== null) {\n        var li = surrogatePairs.lastIndex\n        if (li - 2 < start) {\n          start++\n        } else {\n          break\n        }\n      }\n    }\n\n    if (start >= end || start < 0) {\n      return false\n    }\n    if (len < 0) {\n      for (i = end - 1, el = (end += len); i >= el; i--) {\n        if (/[\\uDC00-\\uDFFF]/.test(str.charAt(i)) && /[\\uD800-\\uDBFF]/.test(str.charAt(i - 1))) {\n          end--\n          el--\n        }\n      }\n      if (start > end) {\n        return false\n      }\n      return str.slice(start, end)\n    } else {\n      se = start + len\n      for (i = start; i < se; i++) {\n        ret += str.charAt(i)\n        if (/[\\uD800-\\uDBFF]/.test(str.charAt(i)) && /[\\uDC00-\\uDFFF]/.test(str.charAt(i + 1))) {\n          // Go one further, since one of the \"characters\" is part of a surrogate pair\n          se++\n        }\n      }\n      return ret\n    }\n  }\n}\n"]}