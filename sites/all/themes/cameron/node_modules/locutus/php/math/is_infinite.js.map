{"version":3,"sources":["../../../src/php/math/is_infinite.js"],"names":[],"mappings":";;;;AAAA,OAAO,OAAP,GAAiB,SAAS,WAAT,CAAsB,GAAtB,EAA2B;;;;;;;;;;;AAU1C,MAAI,cAAc,EAAlB;;AAEA,MAAI,QAAQ,QAAR,IAAoB,QAAQ,CAAC,QAAjC,EAA2C;AACzC,WAAO,IAAP;AACD;;;AAGD,MAAI,QAAO,GAAP,yCAAO,GAAP,OAAe,QAAnB,EAA6B;AAC3B,kBAAe,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,GAA/B,MAAwC,gBAAxC,GAA2D,OAA3D,GAAqE,QAApF;AACD,GAFD,MAEO,IAAI,OAAO,GAAP,KAAe,QAAf,IAA2B,CAAC,IAAI,KAAJ,CAAU,YAAV,CAAhC,EAAyD;;AAE9D,kBAAc,QAAd;AACD;AACD,MAAI,WAAJ,EAAiB;AACf,QAAI,MAAM,8DAA8D,WAA9D,GAA4E,QAAtF;AACA,UAAM,IAAI,KAAJ,CAAU,GAAV,CAAN;AACD;;AAED,SAAO,KAAP;AACD,CA7BD","file":"is_infinite.js","sourcesContent":["module.exports = function is_infinite (val) { // eslint-disable-line camelcase\n  //  discuss at: http://locutus.io/php/is_infinite/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: is_infinite(Infinity)\n  //   returns 1: true\n  //   example 2: is_infinite(-Infinity)\n  //   returns 2: true\n  //   example 3: is_infinite(0)\n  //   returns 3: false\n\n  var warningType = ''\n\n  if (val === Infinity || val === -Infinity) {\n    return true\n  }\n\n  // Some warnings for maximum PHP compatibility\n  if (typeof val === 'object') {\n    warningType = (Object.prototype.toString.call(val) === '[object Array]' ? 'array' : 'object')\n  } else if (typeof val === 'string' && !val.match(/^[\\+\\-]?\\d/)) {\n    // simulate PHP's behaviour: '-9a' doesn't give a warning, but 'a9' does.\n    warningType = 'string'\n  }\n  if (warningType) {\n    var msg = 'Warning: is_infinite() expects parameter 1 to be double, ' + warningType + ' given'\n    throw new Error(msg)\n  }\n\n  return false\n}\n"]}