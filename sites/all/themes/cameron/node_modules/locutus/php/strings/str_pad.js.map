{"version":3,"sources":["../../../src/php/strings/str_pad.js"],"names":[],"mappings":";;AAAA,OAAO,OAAP,GAAiB,SAAS,OAAT,CAAkB,KAAlB,EAAyB,SAAzB,EAAoC,SAApC,EAA+C,OAA/C,EAAwD;;;;;;;;;;;;AAWvE,MAAI,OAAO,EAAX;AACA,MAAI,OAAJ;;AAEA,MAAI,kBAAkB,SAAlB,eAAkB,CAAU,CAAV,EAAa,GAAb,EAAkB;AACtC,QAAI,UAAU,EAAd;;AAEA,WAAO,QAAQ,MAAR,GAAiB,GAAxB,EAA6B;AAC3B,iBAAW,CAAX;AACD;AACD,cAAU,QAAQ,MAAR,CAAe,CAAf,EAAkB,GAAlB,CAAV;;AAEA,WAAO,OAAP;AACD,GATD;;AAWA,WAAS,EAAT;AACA,cAAY,cAAc,SAAd,GAA0B,SAA1B,GAAsC,GAAlD;;AAEA,MAAI,YAAY,cAAZ,IAA8B,YAAY,eAA1C,IAA6D,YAAY,cAA7E,EAA6F;AAC3F,cAAU,eAAV;AACD;AACD,MAAI,CAAC,UAAU,YAAY,MAAM,MAA7B,IAAuC,CAA3C,EAA8C;AAC5C,QAAI,YAAY,cAAhB,EAAgC;AAC9B,cAAQ,gBAAgB,SAAhB,EAA2B,OAA3B,IAAsC,KAA9C;AACD,KAFD,MAEO,IAAI,YAAY,eAAhB,EAAiC;AACtC,cAAQ,QAAQ,gBAAgB,SAAhB,EAA2B,OAA3B,CAAhB;AACD,KAFM,MAEA,IAAI,YAAY,cAAhB,EAAgC;AACrC,aAAO,gBAAgB,SAAhB,EAA2B,KAAK,IAAL,CAAU,UAAU,CAApB,CAA3B,CAAP;AACA,cAAQ,OAAO,KAAP,GAAe,IAAvB;AACA,cAAQ,MAAM,MAAN,CAAa,CAAb,EAAgB,SAAhB,CAAR;AACD;AACF;;AAED,SAAO,KAAP;AACD,CA5CD","file":"str_pad.js","sourcesContent":["module.exports = function str_pad (input, padLength, padString, padType) { // eslint-disable-line camelcase\n  //  discuss at: http://locutus.io/php/str_pad/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Michael White (http://getsprink.com)\n  //    input by: Marco van Oort\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: str_pad('Kevin van Zonneveld', 30, '-=', 'STR_PAD_LEFT')\n  //   returns 1: '-=-=-=-=-=-Kevin van Zonneveld'\n  //   example 2: str_pad('Kevin van Zonneveld', 30, '-', 'STR_PAD_BOTH')\n  //   returns 2: '------Kevin van Zonneveld-----'\n\n  var half = ''\n  var padToGo\n\n  var _strPadRepeater = function (s, len) {\n    var collect = ''\n\n    while (collect.length < len) {\n      collect += s\n    }\n    collect = collect.substr(0, len)\n\n    return collect\n  }\n\n  input += ''\n  padString = padString !== undefined ? padString : ' '\n\n  if (padType !== 'STR_PAD_LEFT' && padType !== 'STR_PAD_RIGHT' && padType !== 'STR_PAD_BOTH') {\n    padType = 'STR_PAD_RIGHT'\n  }\n  if ((padToGo = padLength - input.length) > 0) {\n    if (padType === 'STR_PAD_LEFT') {\n      input = _strPadRepeater(padString, padToGo) + input\n    } else if (padType === 'STR_PAD_RIGHT') {\n      input = input + _strPadRepeater(padString, padToGo)\n    } else if (padType === 'STR_PAD_BOTH') {\n      half = _strPadRepeater(padString, Math.ceil(padToGo / 2))\n      input = half + input + half\n      input = input.substr(0, padLength)\n    }\n  }\n\n  return input\n}\n"]}