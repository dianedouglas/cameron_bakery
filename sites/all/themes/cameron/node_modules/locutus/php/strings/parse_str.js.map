{"version":3,"sources":["../../../src/php/strings/parse_str.js"],"names":[],"mappings":"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","file":"parse_str.js","sourcesContent":["module.exports = function parse_str (str, array) { // eslint-disable-line camelcase\n  //       discuss at: http://locutus.io/php/parse_str/\n  //      original by: Cagri Ekin\n  //      improved by: Michael White (http://getsprink.com)\n  //      improved by: Jack\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: stag019\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: MIO_KODUKI (http://mio-koduki.blogspot.com/)\n  // reimplemented by: stag019\n  //         input by: Dreamer\n  //         input by: Zaide (http://zaidesthings.com/)\n  //         input by: David Pesta (http://davidpesta.com/)\n  //         input by: jeicquest\n  //           note 1: When no argument is specified, will put variables in global scope.\n  //           note 1: When a particular argument has been passed, and the\n  //           note 1: returned value is different parse_str of PHP.\n  //           note 1: For example, a=b=c&d====c\n  //        example 1: var $arr = {}\n  //        example 1: parse_str('first=foo&second=bar', $arr)\n  //        example 1: var $result = $arr\n  //        returns 1: { first: 'foo', second: 'bar' }\n  //        example 2: var $arr = {}\n  //        example 2: parse_str('str_a=Jack+and+Jill+didn%27t+see+the+well.', $arr)\n  //        example 2: var $result = $arr\n  //        returns 2: { str_a: \"Jack and Jill didn't see the well.\" }\n  //        example 3: var $abc = {3:'a'}\n  //        example 3: parse_str('a[b][\"c\"]=def&a[q]=t+5', $abc)\n  //        example 3: var $result = $abc\n  //        returns 3: {\"3\":\"a\",\"a\":{\"b\":{\"c\":\"def\"},\"q\":\"t 5\"}}\n\n  var strArr = String(str).replace(/^&/, '').replace(/&$/, '').split('&')\n  var sal = strArr.length\n  var i\n  var j\n  var ct\n  var p\n  var lastObj\n  var obj\n  var undef\n  var chr\n  var tmp\n  var key\n  var value\n  var postLeftBracketPos\n  var keys\n  var keysLen\n\n  var _fixStr = function (str) {\n    return decodeURIComponent(str.replace(/\\+/g, '%20'))\n  }\n\n  var $global = (typeof window !== 'undefined' ? window : global)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  if (!array) {\n    array = $global\n  }\n\n  for (i = 0; i < sal; i++) {\n    tmp = strArr[i].split('=')\n    key = _fixStr(tmp[0])\n    value = (tmp.length < 2) ? '' : _fixStr(tmp[1])\n\n    while (key.charAt(0) === ' ') {\n      key = key.slice(1)\n    }\n    if (key.indexOf('\\x00') > -1) {\n      key = key.slice(0, key.indexOf('\\x00'))\n    }\n    if (key && key.charAt(0) !== '[') {\n      keys = []\n      postLeftBracketPos = 0\n      for (j = 0; j < key.length; j++) {\n        if (key.charAt(j) === '[' && !postLeftBracketPos) {\n          postLeftBracketPos = j + 1\n        } else if (key.charAt(j) === ']') {\n          if (postLeftBracketPos) {\n            if (!keys.length) {\n              keys.push(key.slice(0, postLeftBracketPos - 1))\n            }\n            keys.push(key.substr(postLeftBracketPos, j - postLeftBracketPos))\n            postLeftBracketPos = 0\n            if (key.charAt(j + 1) !== '[') {\n              break\n            }\n          }\n        }\n      }\n      if (!keys.length) {\n        keys = [key]\n      }\n      for (j = 0; j < keys[0].length; j++) {\n        chr = keys[0].charAt(j)\n        if (chr === ' ' || chr === '.' || chr === '[') {\n          keys[0] = keys[0].substr(0, j) + '_' + keys[0].substr(j + 1)\n        }\n        if (chr === '[') {\n          break\n        }\n      }\n\n      obj = array\n      for (j = 0, keysLen = keys.length; j < keysLen; j++) {\n        key = keys[j].replace(/^['\"]/, '').replace(/['\"]$/, '')\n        lastObj = obj\n        if ((key !== '' && key !== ' ') || j === 0) {\n          if (obj[key] === undef) {\n            obj[key] = {}\n          }\n          obj = obj[key]\n        } else {\n          // To insert new dimension\n          ct = -1\n          for (p in obj) {\n            if (obj.hasOwnProperty(p)) {\n              if (+p > ct && p.match(/^\\d+$/g)) {\n                ct = +p\n              }\n            }\n          }\n          key = ct + 1\n        }\n      }\n      lastObj[key] = value\n    }\n  }\n}\n"]}