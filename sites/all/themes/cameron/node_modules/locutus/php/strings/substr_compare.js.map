{"version":3,"sources":["../../../src/php/strings/substr_compare.js"],"names":[],"mappings":";;AAAA,OAAO,OAAP,GAAiB,SAAS,cAAT,CAAyB,OAAzB,EAAkC,GAAlC,EAAuC,MAAvC,EAA+C,MAA/C,EAAuD,iBAAvD,EAA0E;;;;;;;;AAOzF,MAAI,CAAC,MAAD,IAAW,WAAW,CAA1B,EAA6B;AAC3B,UAAM,IAAI,KAAJ,CAAU,qCAAV,CAAN;AACD;;AAED,MAAI,SAAS,CAAb,EAAgB;AACd,aAAS,QAAQ,MAAR,GAAiB,MAA1B;AACD;;AAED,MAAI,UAAU,SAAU,QAAQ,MAAR,GAAiB,MAAzC,EAAkD;AAChD,WAAO,KAAP;AACD;AACD,WAAS,UAAU,QAAQ,MAAR,GAAiB,MAApC;;AAEA,YAAU,QAAQ,MAAR,CAAe,MAAf,EAAuB,MAAvB,CAAV;;AAEA,QAAM,IAAI,MAAJ,CAAW,CAAX,EAAc,MAAd,CAAN;AACA,MAAI,iBAAJ,EAAuB;;AAErB,cAAU,CAAC,UAAU,EAAX,EAAe,WAAf,EAAV;AACA,UAAM,CAAC,MAAM,EAAP,EAAW,WAAX,EAAN;AACA,QAAI,YAAY,GAAhB,EAAqB;AACnB,aAAO,CAAP;AACD;AACD,WAAQ,UAAU,GAAX,GAAkB,CAAlB,GAAsB,CAAC,CAA9B;AACD;;AAED,SAAS,YAAY,GAAb,GAAoB,CAApB,GAA0B,UAAU,GAAX,GAAkB,CAAlB,GAAsB,CAAC,CAAxD;AACD,CAlCD","file":"substr_compare.js","sourcesContent":["module.exports = function substr_compare (mainStr, str, offset, length, caseInsensitivity) { // eslint-disable-line camelcase\n  //  discuss at: http://locutus.io/php/substr_compare/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: strcasecmp, strcmp\n  //   example 1: substr_compare(\"abcde\", \"bc\", 1, 2)\n  //   returns 1: 0\n\n  if (!offset && offset !== 0) {\n    throw new Error('Missing offset for substr_compare()')\n  }\n\n  if (offset < 0) {\n    offset = mainStr.length + offset\n  }\n\n  if (length && length > (mainStr.length - offset)) {\n    return false\n  }\n  length = length || mainStr.length - offset\n\n  mainStr = mainStr.substr(offset, length)\n  // Should only compare up to the desired length\n  str = str.substr(0, length)\n  if (caseInsensitivity) {\n    // Works as strcasecmp\n    mainStr = (mainStr + '').toLowerCase()\n    str = (str + '').toLowerCase()\n    if (mainStr === str) {\n      return 0\n    }\n    return (mainStr > str) ? 1 : -1\n  }\n  // Works as strcmp\n  return ((mainStr === str) ? 0 : ((mainStr > str) ? 1 : -1))\n}\n"]}