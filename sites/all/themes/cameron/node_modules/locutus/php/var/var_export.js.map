{"version":3,"sources":["../../../src/php/var/var_export.js"],"names":[],"mappings":"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","file":"var_export.js","sourcesContent":["module.exports = function var_export (mixedExpression, boolReturn) { // eslint-disable-line camelcase\n  //  discuss at: http://locutus.io/php/var_export/\n  // original by: Philip Peterson\n  // improved by: johnrembo\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Brian Tafoya (http://www.premasolutions.com/)\n  //    input by: Hans Henrik (http://hanshenrik.tk/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var_export(null)\n  //   returns 1: null\n  //   example 2: var_export({0: 'Kevin', 1: 'van', 2: 'Zonneveld'}, true)\n  //   returns 2: \"array (\\n  0 => 'Kevin',\\n  1 => 'van',\\n  2 => 'Zonneveld'\\n)\"\n  //   example 3: var data = 'Kevin'\n  //   example 3: var_export(data, true)\n  //   returns 3: \"'Kevin'\"\n\n  var echo = require('../strings/echo')\n  var retstr = ''\n  var iret = ''\n  var value\n  var cnt = 0\n  var x = []\n  var i = 0\n  var funcParts = []\n  // We use the last argument (not part of PHP) to pass in\n  // our indentation level\n  var idtLevel = arguments[2] || 2\n  var innerIndent = ''\n  var outerIndent = ''\n  var getFuncName = function (fn) {\n    var name = (/\\W*function\\s+([\\w\\$]+)\\s*\\(/).exec(fn)\n    if (!name) {\n      return '(Anonymous)'\n    }\n    return name[1]\n  }\n\n  var _makeIndent = function (idtLevel) {\n    return (new Array(idtLevel + 1))\n      .join(' ')\n  }\n  var __getType = function (inp) {\n    var i = 0\n    var match\n    var types\n    var cons\n    var type = typeof inp\n    if (type === 'object' && (inp && inp.constructor) &&\n      getFuncName(inp.constructor) === 'LOCUTUS_Resource') {\n      return 'resource'\n    }\n    if (type === 'function') {\n      return 'function'\n    }\n    if (type === 'object' && !inp) {\n      // Should this be just null?\n      return 'null'\n    }\n    if (type === 'object') {\n      if (!inp.constructor) {\n        return 'object'\n      }\n      cons = inp.constructor.toString()\n      match = cons.match(/(\\w+)\\(/)\n      if (match) {\n        cons = match[1].toLowerCase()\n      }\n      types = ['boolean', 'number', 'string', 'array']\n      for (i = 0; i < types.length; i++) {\n        if (cons === types[i]) {\n          type = types[i]\n          break\n        }\n      }\n    }\n    return type\n  }\n  var type = __getType(mixedExpression)\n\n  if (type === null) {\n    retstr = 'NULL'\n  } else if (type === 'array' || type === 'object') {\n    outerIndent = _makeIndent(idtLevel - 2)\n    innerIndent = _makeIndent(idtLevel)\n    for (i in mixedExpression) {\n      value = var_export(mixedExpression[i], 1, idtLevel + 2)\n      value = typeof value === 'string' ? value.replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;') : value\n      x[cnt++] = innerIndent + i + ' => ' +\n        (__getType(mixedExpression[i]) === 'array' ? '\\n' : '') + value\n    }\n    iret = x.join(',\\n')\n    retstr = outerIndent + 'array (\\n' + iret + '\\n' + outerIndent + ')'\n  } else if (type === 'function') {\n    funcParts = mixedExpression.toString().match(/function .*?\\((.*?)\\) \\{([\\s\\S]*)\\}/)\n\n    // For lambda functions, var_export() outputs such as the following:\n    // '\\000lambda_1'. Since it will probably not be a common use to\n    // expect this (unhelpful) form, we'll use another PHP-exportable\n    // construct, create_function() (though dollar signs must be on the\n    // variables in JavaScript); if using instead in JavaScript and you\n    // are using the namespaced version, note that create_function() will\n    // not be available as a global\n    retstr = \"create_function ('\" + funcParts[1] + \"', '\" +\n      funcParts[2].replace(new RegExp(\"'\", 'g'), \"\\\\'\") + \"')\"\n  } else if (type === 'resource') {\n    // Resources treated as null for var_export\n    retstr = 'NULL'\n  } else {\n    retstr = typeof mixedExpression !== 'string' ? mixedExpression\n      : \"'\" + mixedExpression.replace(/([\"'])/g, '\\\\$1').replace(/\\0/g, '\\\\0') + \"'\"\n  }\n\n  if (!boolReturn) {\n    echo(retstr)\n    return null\n  }\n\n  return retstr\n}\n"]}