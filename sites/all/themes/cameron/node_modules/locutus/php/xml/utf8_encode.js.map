{"version":3,"sources":["../../../src/php/xml/utf8_encode.js"],"names":[],"mappings":";;AAAA,OAAO,OAAP,GAAiB,SAAS,WAAT,CAAsB,SAAtB,EAAiC;;;;;;;;;;;;;;;;;AAgBhD,MAAI,cAAc,IAAd,IAAsB,OAAO,SAAP,KAAqB,WAA/C,EAA4D;AAC1D,WAAO,EAAP;AACD;;;AAGD,MAAI,SAAU,YAAY,EAA1B;AACA,MAAI,UAAU,EAAd;AACA,MAAI,KAAJ;AACA,MAAI,GAAJ;AACA,MAAI,UAAU,CAAd;;AAEA,UAAQ,MAAM,CAAd;AACA,YAAU,OAAO,MAAjB;AACA,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,OAApB,EAA6B,GAA7B,EAAkC;AAChC,QAAI,KAAK,OAAO,UAAP,CAAkB,CAAlB,CAAT;AACA,QAAI,MAAM,IAAV;;AAEA,QAAI,KAAK,GAAT,EAAc;AACZ;AACD,KAFD,MAEO,IAAI,KAAK,GAAL,IAAY,KAAK,IAArB,EAA2B;AAChC,YAAM,OAAO,YAAP,CACH,MAAM,CAAP,GAAY,GADR,EACc,KAAK,EAAN,GAAY,GADzB,CAAN;AAGD,KAJM,MAIA,IAAI,CAAC,KAAK,MAAN,MAAkB,MAAtB,EAA8B;AACnC,YAAM,OAAO,YAAP,CACH,MAAM,EAAP,GAAa,GADT,EACgB,MAAM,CAAP,GAAY,EAAb,GAAmB,GADjC,EACuC,KAAK,EAAN,GAAY,GADlD,CAAN;AAGD,KAJM,MAIA;;AAEL,UAAI,CAAC,KAAK,MAAN,MAAkB,MAAtB,EAA8B;AAC5B,cAAM,IAAI,UAAJ,CAAe,kCAAkC,CAAjD,CAAN;AACD;AACD,UAAI,KAAK,OAAO,UAAP,CAAkB,EAAE,CAApB,CAAT;AACA,UAAI,CAAC,KAAK,MAAN,MAAkB,MAAtB,EAA8B;AAC5B,cAAM,IAAI,UAAJ,CAAe,kCAAkC,IAAI,CAAtC,CAAf,CAAN;AACD;AACD,WAAK,CAAC,CAAC,KAAK,KAAN,KAAgB,EAAjB,KAAwB,KAAK,KAA7B,IAAsC,OAA3C;AACA,YAAM,OAAO,YAAP,CACH,MAAM,EAAP,GAAa,GADT,EACgB,MAAM,EAAP,GAAa,EAAd,GAAoB,GADlC,EACyC,MAAM,CAAP,GAAY,EAAb,GAAmB,GAD1D,EACgE,KAAK,EAAN,GAAY,GAD3E,CAAN;AAGD;AACD,QAAI,QAAQ,IAAZ,EAAkB;AAChB,UAAI,MAAM,KAAV,EAAiB;AACf,mBAAW,OAAO,KAAP,CAAa,KAAb,EAAoB,GAApB,CAAX;AACD;AACD,iBAAW,GAAX;AACA,cAAQ,MAAM,IAAI,CAAlB;AACD;AACF;;AAED,MAAI,MAAM,KAAV,EAAiB;AACf,eAAW,OAAO,KAAP,CAAa,KAAb,EAAoB,OAApB,CAAX;AACD;;AAED,SAAO,OAAP;AACD,CAvED","file":"utf8_encode.js","sourcesContent":["module.exports = function utf8_encode (argString) { // eslint-disable-line camelcase\n  //  discuss at: http://locutus.io/php/utf8_encode/\n  // original by: Webtoolkit.info (http://www.webtoolkit.info/)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: sowberry\n  // improved by: Jack\n  // improved by: Yves Sucaet\n  // improved by: kirilloid\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Ulrich\n  // bugfixed by: Rafa≈Ç Kukawski (http://blog.kukawski.pl)\n  // bugfixed by: kirilloid\n  //   example 1: utf8_encode('Kevin van Zonneveld')\n  //   returns 1: 'Kevin van Zonneveld'\n\n  if (argString === null || typeof argString === 'undefined') {\n    return ''\n  }\n\n  // .replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n  var string = (argString + '')\n  var utftext = ''\n  var start\n  var end\n  var stringl = 0\n\n  start = end = 0\n  stringl = string.length\n  for (var n = 0; n < stringl; n++) {\n    var c1 = string.charCodeAt(n)\n    var enc = null\n\n    if (c1 < 128) {\n      end++\n    } else if (c1 > 127 && c1 < 2048) {\n      enc = String.fromCharCode(\n        (c1 >> 6) | 192, (c1 & 63) | 128\n      )\n    } else if ((c1 & 0xF800) !== 0xD800) {\n      enc = String.fromCharCode(\n        (c1 >> 12) | 224, ((c1 >> 6) & 63) | 128, (c1 & 63) | 128\n      )\n    } else {\n      // surrogate pairs\n      if ((c1 & 0xFC00) !== 0xD800) {\n        throw new RangeError('Unmatched trail surrogate at ' + n)\n      }\n      var c2 = string.charCodeAt(++n)\n      if ((c2 & 0xFC00) !== 0xDC00) {\n        throw new RangeError('Unmatched lead surrogate at ' + (n - 1))\n      }\n      c1 = ((c1 & 0x3FF) << 10) + (c2 & 0x3FF) + 0x10000\n      enc = String.fromCharCode(\n        (c1 >> 18) | 240, ((c1 >> 12) & 63) | 128, ((c1 >> 6) & 63) | 128, (c1 & 63) | 128\n      )\n    }\n    if (enc !== null) {\n      if (end > start) {\n        utftext += string.slice(start, end)\n      }\n      utftext += enc\n      start = end = n + 1\n    }\n  }\n\n  if (end > start) {\n    utftext += string.slice(start, stringl)\n  }\n\n  return utftext\n}\n"]}